<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>world-flora</artifactId>
		<groupId>org.kew.world-flora</groupId>
		<version>0.1.2</version>
	</parent>
	<artifactId>world-flora-harvest</artifactId>
	<packaging>war</packaging>
	<name>World Flora Harvesting</name>
	<description>Backend Harvesting Routines</description>
	<dependencies>
        <dependency>
			<groupId>org.kew.world-flora</groupId>
			<artifactId>world-flora-model</artifactId>
		</dependency>
		<dependency>
			<groupId>org.kew.world-flora</groupId>
			<artifactId>world-flora-service</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.hibernatespatial</groupId>
          <artifactId>hibernate-spatial-h2-geodb</artifactId>
	    </dependency>
		<dependency>
          <groupId>org.kew.world-flora</groupId>
          <artifactId>world-flora-persistence</artifactId>
          <type>test-jar</type>
          <version>${project.version}</version><!--$NO-MVN-MAN-VER$-->
          <scope>test</scope>
        </dependency>
        <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>wstx-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-infrastructure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-admin-manager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-admin-resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-jms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-jmx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-file</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.joda</groupId>
			<artifactId>com.springsource.org.joda.time</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.stream</groupId>
			<artifactId>com.springsource.javax.xml.stream</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		 <dependency>
		    <groupId>org.hibernatespatial</groupId>
            <artifactId>hibernate-spatial-mysql</artifactId>
	    </dependency>
	    <dependency>
	        <groupId>postgresql</groupId>
	        <artifactId>postgresql</artifactId>
	    </dependency>
	    <dependency>
			<groupId>org.hibernatespatial</groupId>
			<artifactId>hibernate-spatial-postgis</artifactId>
		</dependency>
	    <dependency>
			<groupId>org.postgis</groupId>
			<artifactId>postgis-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.gbif</groupId>
			<artifactId>dwca-reader</artifactId>
		</dependency>
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
		</dependency>
		<dependency>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
			<groupId>org.apache.sanselan</groupId>
			<artifactId>sanselan</artifactId>
		</dependency>
		<dependency>
            <groupId>org.im4java</groupId>
            <artifactId>im4java</artifactId>
        </dependency>
        <dependency>
          <groupId>net.sourceforge.hatbox</groupId>
          <artifactId>org.emonocot.hatbox</artifactId>
        </dependency>
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
		</dependency>
        <dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-spring</artifactId>
		</dependency>
		<dependency>
	       <groupId>org.apache.xbean</groupId>
	       <artifactId>xbean-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>au.org.ala.delta</groupId>
            <artifactId>delta-common</artifactId>
        </dependency>
        <dependency>
	      <groupId>org.apache.tika</groupId>
	      <artifactId>tika-parsers</artifactId>
	    </dependency>
        <dependency>
          <groupId>org.gbif</groupId>
          <artifactId>ecat-common</artifactId>
        </dependency>
        <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
	       <groupId>org.slf4j</groupId>
	       <artifactId>jul-to-slf4j</artifactId>
	    </dependency>
	    <dependency>
          <groupId>org.mapfish.print</groupId>
          <artifactId>print-lib</artifactId>
        </dependency>
        <dependency>
	      <groupId>org.jyaml</groupId>
	      <artifactId>jyaml</artifactId>
        </dependency>
		<dependency>
	      <groupId>com.lowagie</groupId>
	      <artifactId>itext</artifactId>
        </dependency>
        <dependency>
	      <groupId>org.json</groupId>
	      <artifactId>json</artifactId>
        </dependency>
        <dependency>
	      <groupId>commons-httpclient</groupId>
	      <artifactId>commons-httpclient</artifactId>
        </dependency>
        <dependency>
           <groupId>ch.thus</groupId>
           <artifactId>pvalsecc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai_imageio</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai_codec</artifactId>
        </dependency>
        <dependency>
              <groupId>org.owasp.antisamy</groupId>
              <artifactId>antisamy</artifactId>
        </dependency>
        <dependency>
             <groupId>org.forester</groupId>
             <artifactId>forester</artifactId>
        </dependency>
        <dependency>
    	    <groupId>org.liquibase</groupId>
		    <artifactId>liquibase-core</artifactId>
    	</dependency>
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
        </dependency>
	</dependencies>
	<build>
		<finalName>world-flora-harvest</finalName>
		<testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
            <includes>
              <include>META-INF/spring/*.properties</include>
            </includes>
          </testResource>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>false</filtering>
            <excludes>
              <exclude>META-INF/spring/*.properties</exclude>
            </excludes>
          </testResource>
        </testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
							  <include>**/*.properties</include>
							  <include>**/*.xml</include>
							</includes>
						</resource>
					</webResources>
					<useCache>true</useCache>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.1.4</version>
				<configuration>
					<container>
						<containerId>${cargo.containerId}</containerId>
						<type>remote</type>
					</container>
					<configuration>
						<type>runtime</type>
						<properties>
							<!-- These parameters are defined in a profile in settings.xml -->
							<cargo.remote.uri>${cargo.tomcat.manager.url}</cargo.remote.uri>
							<cargo.remote.username>${cargo.remote.username}</cargo.remote.username>
							<cargo.remote.password>${cargo.remote.password}</cargo.remote.password>
						</properties>
					</configuration>
					<deployer>
						<type>remote</type>
						<deployables>
							<deployable>
								<groupId>${project.groupId}</groupId>
								<artifactId>${project.artifactId}</artifactId>
								<type>war</type>
								<pingURL>${harvester.baseUrl}/jobs</pingURL>
								<pingTimeout>10000</pingTimeout>
								<properties>
									<context>${cargo.harvester.context.path}</context>
								</properties>
							</deployable>
						</deployables>
					</deployer>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <configLocation>../src/main/resources/emonocot-checkstyle.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-assembly-plugin</artifactId>
              <configuration>
                 <archive>
                   <manifest>
                        <mainClass>org.springframework.batch.core.launch.support.CommandLineJobRunner</mainClass>
                   </manifest>
                 </archive>
				 <descriptors>
					<descriptor>src/main/assembly/support.xml</descriptor>
				</descriptors>
			  </configuration>
              <executions>
                <execution>
                  <phase>package</phase>
                  <goals>
                    <goal>single</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
		</plugins>
	</build>
</project>
